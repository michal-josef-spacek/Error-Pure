TODO
====
11. Testy pro priklady v dokumentaci.
12. Testy pro verzi v dokumentaci oproti verzi v kodu.
13. Prepsat Makefile.PL na Module::Install s tim, ze tu bude resources promenna?
14. Zakomponovat do Makefile.PL resources:
	'resources' => {
		'repository' => {
			'url' => 'git://github.com/tupinek/Error-Pure',
			'web' => 'https://github.com/tupinek/Error-Pure',
			'type' => 'git',
		},
	},
15. Opravit RT#69402 (https://rt.cpan.org/Ticket/Display.html?id=69402).
16.

Applied
=======
6. Nefunguje nahrada die globalne (Malo veci se stacku), kdyz je modul vkladani
   z externiho souboru.
Error trida musi byt nahrana nazacatku pred nactenim ostatnich knihoven.
OK [20110225] skim

5. Nefunguje nahrada die globalne (v pripade, ze mam vkladany modul ve stejnem souboru)
Error trida musi byt nahrana nazacatku pred nactenim ostatnich knihoven.
OK [20110225] skim

1. Multiple nefunguje dobre.
Přejmenováno na Error::Pure a Error::Pure na Error::Pure::Die.
OK [20110708] skim

3. Projit oproti Error::Simple a poopravovat.
OK [20110708] skim

7. Odstranit z Error::Pure::Utils::get_err() moznost predavat odkaz na pole.
OK [20110708] skim

4. Dokumentace.
OK [20110710] skim

9. Prejmenovat err_pretty na neco jako err_line.
OK [20110710] skim

8. Prejmenovat err_bt_simple na neco jako err_line_all.
OK [20110710] skim

2. die odchytnute eval vraci divnou strukturu (message by melo byt bez newline).
Nechapu.
NONE [20110710] skim

10. Opravit Error::Pure::Die tak, aby se chovalo presne jako die. Tzn. Pokud
    neni v evalu, tak se na vystup predaji vsechny zpravy.
OK [20110710] skim
